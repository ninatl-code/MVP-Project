-- =====================================
-- SYST√àME DE NOTIFICATIONS AUTOMATIQUE
-- =====================================
-- Remplace le syst√®me CRON par des triggers PostgreSQL automatiques
-- Se d√©clenche instantan√©ment quand une commande devient 'delivered'
-- 1. Fonction pour cr√©er une notification de rating automatiquement
-- Adapt√©e pour utiliser la table 'avis' existante avec ses colonnes
CREATE OR REPLACE FUNCTION create_rating_notification() RETURNS TRIGGER AS $$
DECLARE commande_info RECORD;
prestataire_info RECORD;
existing_avis RECORD;
BEGIN -- V√©rifier si le statut change vers 'delivered'
IF NEW.status = 'delivered'
AND (
    OLD.status IS NULL
    OR OLD.status != 'delivered'
) THEN -- R√©cup√©rer les informations de la commande
SELECT c.id,
    c.particulier_id,
    c.annonce_id,
    a.titre as annonce_titre,
    a.prestataire as prestataire_id INTO commande_info
FROM commandes c
    JOIN annonces a ON c.annonce_id = a.id
WHERE c.id = NEW.id;
-- V√©rifier qu'un avis n'existe pas d√©j√† pour cette commande/particulier
SELECT id INTO existing_avis
FROM avis
WHERE particulier_id = commande_info.particulier_id
    AND prestataire_id = commande_info.prestataire_id;
-- Ne cr√©er la notification que s'il n'y a pas encore d'avis
IF existing_avis.id IS NULL THEN -- R√©cup√©rer le nom du prestataire
SELECT nom INTO prestataire_info
FROM profiles
WHERE id = commande_info.prestataire_id;
-- Cr√©er la notification de demande de rating
INSERT INTO notifications (
        user_id,
        type,
        title,
        message,
        commande_id,
        annonce_id,
        lu,
        created_at,
        updated_at
    )
VALUES (
        commande_info.particulier_id,
        'rating_request',
        'Commande re√ßue ! üì¶',
        format(
            'Votre commande "%s" chez %s est arriv√©e ! Partagez votre avis pour aider la communaut√©.',
            commande_info.annonce_titre,
            COALESCE(prestataire_info.nom, 'le prestataire')
        ),
        NEW.id,
        commande_info.annonce_id,
        false,
        NOW(),
        NOW()
    );
-- Ajouter un log pour debug
RAISE LOG 'Notification de rating cr√©√©e pour commande % (utilisateur %)',
NEW.id,
commande_info.particulier_id;
ELSE RAISE LOG 'Avis d√©j√† existant pour particulier % et prestataire %, pas de notification cr√©√©e',
commande_info.particulier_id,
commande_info.prestataire_id;
END IF;
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;
-- 2. Cr√©er le trigger sur la table commandes
DROP TRIGGER IF EXISTS trigger_rating_notification_on_delivery ON commandes;
CREATE TRIGGER trigger_rating_notification_on_delivery
AFTER
UPDATE OF status ON commandes FOR EACH ROW
    WHEN (NEW.status = 'delivered') EXECUTE FUNCTION create_rating_notification();
-- 3. Fonction similaire pour les r√©servations (optionnel)
-- Se d√©clenche 4h apr√®s la date de r√©servation
CREATE OR REPLACE FUNCTION create_reservation_rating_notification() RETURNS TRIGGER AS $$
DECLARE reservation_info RECORD;
prestataire_info RECORD;
time_diff INTERVAL;
BEGIN -- Calculer la diff√©rence de temps depuis la date de r√©servation
time_diff := NOW() - NEW.date;
-- Si la r√©servation s'est termin√©e il y a plus de 4 heures
-- ET qu'aucune notification n'a √©t√© envoy√©e
IF time_diff > INTERVAL '4 hours'
AND (
    NEW.notified_for_rating IS NULL
    OR NEW.notified_for_rating = false
) THEN -- R√©cup√©rer les informations de la r√©servation
SELECT r.id,
    r.particulier_id,
    r.annonce_id,
    a.titre as annonce_titre,
    a.prestataire as prestataire_id INTO reservation_info
FROM reservations r
    JOIN annonces a ON r.annonce_id = a.id
WHERE r.id = NEW.id;
-- R√©cup√©rer le nom du prestataire
SELECT nom INTO prestataire_info
FROM profiles
WHERE id = reservation_info.prestataire_id;
-- Cr√©er la notification
INSERT INTO notifications (
        user_id,
        type,
        title,
        message,
        reservation_id,
        annonce_id,
        lu,
        created_at,
        updated_at
    )
VALUES (
        reservation_info.particulier_id,
        'rating_request',
        'R√©servation termin√©e ! ‚≠ê',
        format(
            'Votre r√©servation "%s" chez %s s''est bien pass√©e ? Partagez votre exp√©rience !',
            reservation_info.annonce_titre,
            COALESCE(prestataire_info.nom, 'le prestataire')
        ),
        NEW.id,
        reservation_info.annonce_id,
        false,
        NOW(),
        NOW()
    );
-- Marquer comme notifi√©
UPDATE reservations
SET notified_for_rating = true,
    updated_at = NOW()
WHERE id = NEW.id;
RAISE LOG 'Notification de rating cr√©√©e pour r√©servation % (utilisateur %)',
NEW.id,
reservation_info.particulier_id;
END IF;
RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;
-- 4. Trigger pour les r√©servations (v√©rifie p√©riodiquement)
-- Note: Ce trigger se d√©clenche sur les updates, vous pourriez avoir besoin
-- d'un CRON job simple pour mettre √† jour les r√©servations anciennes une fois par jour
DROP TRIGGER IF EXISTS trigger_reservation_rating_notification ON reservations;
CREATE TRIGGER trigger_reservation_rating_notification
AFTER
UPDATE ON reservations FOR EACH ROW EXECUTE FUNCTION create_reservation_rating_notification();
-- =====================================
-- ACTIVATION ET TESTS
-- =====================================
-- Pour tester le syst√®me, vous pouvez :
-- 1. Marquer une commande comme livr√©e :
--    UPDATE commandes SET status = 'delivered' WHERE id = [ID_COMMANDE];
-- 
-- 2. V√©rifier qu'une notification a √©t√© cr√©√©e :
--    SELECT * FROM notifications WHERE type = 'rating_request' ORDER BY created_at DESC LIMIT 5;
-- =====================================
-- COMMENT L'UTILISER
-- =====================================
-- 1. Ex√©cutez ce script dans votre console Supabase SQL
-- 2. Supprimez l'ancien appel API de notification dans votre code frontend
-- 3. Les notifications se cr√©eront automatiquement !
COMMENT ON FUNCTION create_rating_notification() IS 'Fonction trigger qui cr√©e automatiquement une notification de rating quand une commande devient delivered';
COMMENT ON FUNCTION create_reservation_rating_notification() IS 'Fonction trigger qui cr√©e automatiquement une notification de rating 4h apr√®s une r√©servation';